#include <array>

namespace ZHTW {
    std::array strings = {
        //Main Menu
        "刪除設定",
        "刪除補丁",
        "SaltyNX 無法運行!",
        "未檢測到 NX-FPS 插件!",
        "遊戲未運行!",
        "全部遊戲",
        "所有內容",
        "管理配置",
        "荧幕設定",
        "更改 FPS",
        "遊戲已關閉! 插件已禁用!",
        "遊戲未運行! 插件已禁用!",
        "遊戲正在運行.",
        "NX-FPS 未運行!",
        "NX-FPS 運行中，等待幀生成.",
        "重啟覆蓋層以再次檢查.",
        "NX-FPS 正在運行.",
        "補丁現在強制 60 Hz.",
        "提高目標 FPS",
        "降低目標 FPS",
        "更改目標 FPS",
        "禁用自定義目標 FPS",
        "高級設定",
        "保存設定",
        "間隔模式：\n\uE019 0(未使用)",
        "間隔模式：\n\uE019 %d(%.1f FPS)",
        "間隔模式：\n\uE019 %d(%d FPS)",
        "間隔模式：\n\uE019 %d(錯誤)",
        "自定義目標 FPS：\n\uE019 已禁用",
        "自定義目標 FPS：\n\uE019 %d",

        //Advanced Settings
        "設定緩衝",
        "此設定將在下次遊戲啟動時應用.",
        "更改後請記得保存設定.",
        "雙緩衝",
        "三緩衝",
        "三緩衝 (強制)",
        "四緩衝 (強制)",
        "四緩衝",
        "NVN 窗口同步等待",
        "模式",
        "啟用",
        "半啟用",
        "禁用",
        "開",
        "關",
        "半開",
        "未找到遊戲配置文件\nTID: %016lX\nBID: %016lX",
        "遊戲配置錯誤：0x%X",
        "補丁文件不存在.\n使用“將配置轉換為補丁文件”來創建!",
        "補丁文件不存在.",
        "新配置下載成功.\n使用“將配置轉換為補丁文件”使其可用!",
        "補丁文件存在.",
        "高級設定",
        "圖形 API：NVN",
        "窗口同步等待",
        "圖形 API：EGL",
        "圖形 API：Vulkan",
        "FPS 補丁",
        "找到有效的配置文件!",
        "轉換後請記得重啟遊戲!",
        "將配置轉換為補丁文件",
        "補丁文件創建成功.\n重啟遊戲並更改\nFPS以應用補丁!",
        "創建補丁時出錯：0x%x",
        "刪除補丁文件",
        "補丁文件已成功刪除.",
        "這可能需要長達 30 秒.",
        "檢查/下載配置文件",
        "正在  Warehouse 中檢查配置...\n完成前無法退出!",
        "其他",
        "禁用後台運行",
        "補丁已加載到遊戲中.",
        "主寫入已加載到遊戲中.",
        "插件未將補丁應用到遊戲中.",
        "Set/活動/可用緩衝區：%d/%d/%d",
        "活動緩衝區：%d",
        "連接超時!",
        "配置不可用! RC: 0x%x",
        "配置不可用! \n正在  Warehouse 中查找更多信息...\n完成前無法退出!",
        "配置不可用! \n正在  Warehouse 中查找更多信息...\n超時! 檢查時間過長.",
        "配置不可用! \n正在  Warehouse 中查找更多信息...\n連接錯誤!",
        "沒有可用的新配置.",
        "無網絡連接!",
        "此遊戲不需要補丁!",
        "此遊戲未列入 Warehouse!",
        "此遊戲已列入 Warehouse,\n但版本不同.\n其他版本不需要補丁,\n您的版本可能也不需要!",
        "此遊戲已列入 Warehouse,\n但版本不同.\n其他版本建議使用補丁,\n但即使是該版本也沒有可用配置!",
        "此遊戲已列入 Warehouse,\n但版本不同.\n其他版本有可用配置!",
        "此遊戲已列入 Warehouse,\n此版本建議使用補丁，但配置不可用!",
        "連接錯誤! RC: 0x%x",
        
        //Display Settings
        "跳幀測試",

        "使用方法：\n"
        "1. 準備一台可手動設置快門速度和 ISO 的相機.\n"
        "2. 將快門速度設置為 1/10 秒或更長，調整 ISO 使畫面亮度適中\n"
        "   (通常 1/10 秒時 ISO 約為 50).\n"
        "3. 按 \uE0E0 繼續.\n"
        "4. 拍攝顯示器照片.\n"
        "5. 如果除首尾塊外所有塊亮度不均勻,\n"
        "   說明您的顯示器不支持當前更新率,\n"
        "   實際運行在其他更新率下.\n\n"
        "   即使顯示器跳幀的情況下,\n"
        "   也比使用不匹配更新率的低 FPS效果好得多,\n"
        "   因為硬体解決方案是均勻分配幀時間的最佳方式.",

        "按 \uE0E1 退出",
        "渲染時間過長! \n關閉遊戲，返回主荧幕，然後重試.",
        
        "將測試所有低於 60 Hz 的可用更新率：\n"
        "40,45,50,55. 按提示按鈕確認更新率可用.\n"
        "如果 15 秒內未按下任何按鈕，將檢查下一個更新率.",

        "按 X 開始",
        "顯示器降頻嚮導",
        "%dp 不支持!",
        "請先關閉遊戲!",
        "按 ZL 確認 40 Hz 可用.",
        "按 X 確認 %d Hz 可用.",
        "按 Y 確認 %d Hz 可用.",
        "按 ZR 確認 %d Hz 可用.",

        "將測試所有高於 60 Hz 直至 %d Hz 的可用更新率.\n"
        "僅 1080p 輸出需要此操作，720p 輸出一切應正常.\n\n"
        "按提示按鈕確認更新率可用.\n"
        "如果 10 秒內未按下任何按鈕，將檢查下一個更新率.\n"
        "這可能需要 %d 秒.",

        "顯示器超頻嚮導",
        "底座 1080p 顯示器手動設置",
        "底座顯示器額外設置",
        "允許補丁強制使用60 Hz",
        "為不匹配的 FPS使用最低更新率",
        "n/d",
        "最大可用更新率：%u Hz\nmyDP 鏈路速率：%s\n配置 ID：%08X",
        "底座顯示器設置",

        "可用的 1080p 更新率",
        "1080p 超頻嚮導",
        "額外設置",

        "您未處於底座模式.\n"
        "請將 Switch 放入底座，再重試.",

        "更改更新率",
        "提高更新率",
        "降低更新率",
        "使更新率與 FPS匹配.",
        "顯示同步",
        "底座設置",
        "SUPER面板",
        "荧幕更新率：%d Hz",

        "這是一個實驗性功能! \n\n"
        "它可能會對您的顯示器造成不可修復的損壞.\n\n"
        "按下 “接受” 即表示您願意承擔此工具可能導致的一切後果.",

        "荧幕設置警告",
        "拒絕",
        "接受",
        "強制英語為顯示語言"
    };

    std::array teslaStrings = {
       "返回",
       "確認" 
    };

    static_assert(teslaStrings.size() == 2);
    static_assert(strings.size() == 128);
}